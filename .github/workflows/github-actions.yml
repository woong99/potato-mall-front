name: Front Deployment

on:
    push:
        branches:
            - main

jobs:
    build:
        name: build
        runs-on: ubuntu-latest

        steps:
            -   name: checkout Github Action
                uses: actions/checkout@v4

            -   name: Setup Node.js
                uses: actions/setup-node@v4

            -   name: Cache dependencies
                id: cache
                uses: actions/cache@v4
                with:
                    path: '**/node_modules'
                    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-node-

            -   name: Install Dependencies
                if: steps.cache.outputs.cache-hit != 'true'
                run: npm install

            -   name: Setting .env
                run: |
                    echo "REACT_APP_API_URL='${{ secrets.REACT_APP_API_URL }}'" >> .env

            -   name: react build
                run: npm run build

            -   name: Package build file
                run: tar -czf build.tar.gz build

            -   name: Upload Build File
                uses: actions/upload-artifact@v4
                with:
                    name: build
                    path: build.tar.gz

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download Build File
                uses: actions/download-artifact@v4
                with:
                    name: build

            -   name: Get public IP address
                id: public_ip
                run: |
                    PUBLIC_IP=$(curl -s https://api.ipify.org)
                    echo "Public IP: $PUBLIC_IP"
                    echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY }}
                    aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
                    aws-region: ap-northeast-2

            -   name: Add Github Actions IP to Security group
                run: |
                    aws ec2 authorize-security-group-ingress --group-name ${{ secrets.AWS_SECURITY_GROUP_NAME }} --protocol tcp --port 22 --cidr ${{steps.public_ip.outputs.public_ip}}/32

            -   name: Deploy build file to EC2
                uses: appleboy/scp-action@master
                with:
                    host: ${{ secrets.AWS_EC2_HOST }}
                    username: ${{ secrets.AWS_EC2_USERNAME }}
                    key: ${{ secrets.AWS_EC2_SSH_KEY }}
                    source: build.tar.gz
                    target: /front

            -   name: SSH into EC2
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.AWS_EC2_HOST }}
                    username: ${{ secrets.AWS_EC2_USERNAME }}
                    key: ${{ secrets.AWS_EC2_SSH_KEY }}
                    script: |
                        cd /front
                        rm -rf build
                        tar -xzf build.tar.gz
                        rm build.tar.gz

            -   name: Remove Github Actions IP from security group
                run: |
                    aws ec2 revoke-security-group-ingress --group-name ${{ secrets.AWS_SECURITY_GROUP_NAME }} --protocol tcp --port 22 --cidr ${{ steps.public_ip.outputs.public_ip }}/32
                env:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_ACCESS_KEY }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
                    AWS_DEFAULT_REGION: ap-northeast-2